AllCops:
  Exclude:
    - 'output/**/*'
  TargetRubyVersion: 2.3
Layout/EmptyLineAfterMagicComment:
  Enabled: false
Layout/AlignArray:
  Enabled: false # No need... there are commas
Layout/AlignHash:
  Enabled: false # No need... there are commas
Layout/AlignParameters:
  EnforcedStyle: with_fixed_indentation
Layout/FirstParameterIndentation:
  Enabled: false
Layout/IndentHeredoc:
  Enabled: false
Layout/IndentationWidth:
  Width: 1
Layout/MultilineMethodCallBraceLayout:
  Enabled: false
Layout/MultilineMethodCallIndentation:
  Enabled: false
Layout/MultilineOperationIndentation:
  EnforcedStyle: indented
Layout/SpaceInsideBlockBraces:
  EnforcedStyle: no_space
Layout/SpaceInsideHashLiteralBraces:
  EnforcedStyle: no_space
Layout/Tab:
  Enabled: false # Amazing how tabs let various developers render 1, 2, 4, 8 or however many spaces they want
Lint/HandleExceptions:
  Enabled: false
Lint/ReturnInVoidContext:
  Enabled: false # This is not even correct
Lint/UselessAccessModifier:
  Enabled: false
Metrics/AbcSize:
  Max: 200 # default is 15
Metrics/BlockLength:
  Enabled: false # There are other length checks that matter
Metrics/BlockNesting:
  Max: 4
Metrics/ClassLength:
  CountComments: false
  Max: 500 # default is 100
Metrics/CyclomaticComplexity:
  Max: 40 # default is 6
Metrics/LineLength:
  Max: 120
Metrics/MethodLength:
  CountComments: false
  Max: 90 # default is 10
Metrics/ModuleLength:
  Max: 400
Metrics/ParameterLists:
  Enabled: false
Metrics/PerceivedComplexity:
  Max: 38 # default is 7
Naming/AccessorMethodName:
  Enabled: false
Naming/PredicateName:
  Enabled: false # I don't agree with this naming convention. Is/Has/Can are useful. is_annoyed? has_annoyed?
Naming/UncommunicativeMethodParamName:
  Enabled: false
Performance/RedundantMatch:
  Enabled: false
Performance/RedundantMerge:
  Enabled: false
Performance/StringReplacement:
  Enabled: false
Style/BlockComments:
  Enabled: false
Style/ClassVars:
  Enabled: false
Style/ConditionalAssignment:
  Enabled: false
Style/EmptyMethod:
  Enabled: false
Style/ExpandPathArguments:
  Enabled: false
Style/GuardClause:
  Enabled: false # Often no difference in readability
Style/IdenticalConditionalBranches:
  Enabled: false
Style/IfUnlessModifier:
  Enabled: false # Often no difference in readability
Style/InverseMethods:
  Enabled: false
Style/MultilineTernaryOperator:
  Enabled: false # Often no difference in readability
Style/NegatedIf:
  Enabled: false # Often no difference in readability
Style/NegatedWhile:
  Enabled: false # Often no difference in readability
Style/Next:
  Enabled: false # Often no difference in readability
Style/NumericPredicate:
  Enabled: false # Seriously?
Style/ParallelAssignment:
  Enabled: false # Totally useful when swapping 2 values
Style/PercentLiteralDelimiters:
  Enabled: false
Style/RedundantReturn:
  Enabled: false # Return is actually clearer to read
Style/RedundantSelf:
  Enabled: false # Often used for clarity
Style/RescueStandardError:
  Enabled: false
Style/SafeNavigation:
  Enabled: false
Style/SignalException:
  Enabled: false # Default changed between rubocop versions. Buh bye!
Style/SymbolArray:
  Enabled: false # Seriously?
Style/TernaryParentheses:
  Enabled: false # Often used for clarity
Style/TrivialAccessors:
  Enabled: false
Style/WordArray:
  Enabled: false # Often no difference in readability
Style/YodaCondition:
  Enabled: false # I prefer them
